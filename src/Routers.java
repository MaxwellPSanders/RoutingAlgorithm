
import java.awt.Color;
import java.util.ArrayList;
import java.util.Scanner;
import static javafx.application.Platform.exit;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Maxwell Sanders
 */
public class Routers extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Routers() {
        initComponents();
    }

    ArrayList<Step> steps = new ArrayList<Step>();
    int currentStep = 0;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainTab = new javax.swing.JTabbedPane();
        Master = new javax.swing.JPanel();
        filelabel = new javax.swing.JLabel();
        chosenfile = new javax.swing.JLabel();
        end = new javax.swing.JButton();
        forward = new javax.swing.JButton();
        backward = new javax.swing.JButton();
        begin = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        stepView = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        stabilityView = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dvTable = new javax.swing.JTextArea();
        jLabel33 = new javax.swing.JLabel();
        timeView = new javax.swing.JLabel();
        Node1 = new javax.swing.JPanel();
        Link12 = new javax.swing.JComboBox();
        Link13 = new javax.swing.JComboBox();
        Link14 = new javax.swing.JComboBox();
        Link15 = new javax.swing.JComboBox();
        Link16 = new javax.swing.JComboBox();
        Forward = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        stepView1 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        Recalculate = new javax.swing.JButton();
        Node2 = new javax.swing.JPanel();
        Link21 = new javax.swing.JComboBox();
        Link23 = new javax.swing.JComboBox();
        Link24 = new javax.swing.JComboBox();
        Link25 = new javax.swing.JComboBox();
        Link26 = new javax.swing.JComboBox();
        Forward1 = new javax.swing.JButton();
        Back1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        stepView2 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        Recalculate1 = new javax.swing.JButton();
        Node3 = new javax.swing.JPanel();
        Link31 = new javax.swing.JComboBox();
        Link32 = new javax.swing.JComboBox();
        Link34 = new javax.swing.JComboBox();
        Link35 = new javax.swing.JComboBox();
        Link36 = new javax.swing.JComboBox();
        Forward2 = new javax.swing.JButton();
        Back2 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        stepView3 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        Recalculate2 = new javax.swing.JButton();
        Node4 = new javax.swing.JPanel();
        Link41 = new javax.swing.JComboBox();
        Link42 = new javax.swing.JComboBox();
        Link43 = new javax.swing.JComboBox();
        Link45 = new javax.swing.JComboBox();
        Link46 = new javax.swing.JComboBox();
        Forward3 = new javax.swing.JButton();
        Back3 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        stepView4 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        Recalculate3 = new javax.swing.JButton();
        Node5 = new javax.swing.JPanel();
        Link51 = new javax.swing.JComboBox();
        Link52 = new javax.swing.JComboBox();
        Link53 = new javax.swing.JComboBox();
        Link54 = new javax.swing.JComboBox();
        Link56 = new javax.swing.JComboBox();
        Forward4 = new javax.swing.JButton();
        Back4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        stepView5 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        Recalculate4 = new javax.swing.JButton();
        Node6 = new javax.swing.JPanel();
        Link61 = new javax.swing.JComboBox();
        Link62 = new javax.swing.JComboBox();
        Link63 = new javax.swing.JComboBox();
        Link64 = new javax.swing.JComboBox();
        Link65 = new javax.swing.JComboBox();
        Forward5 = new javax.swing.JButton();
        Back5 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        stepView6 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        Recalculate5 = new javax.swing.JButton();
        FileChooserTab = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        filelabel.setText("File Name:");

        end.setText("End");
        end.setEnabled(false);
        end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endActionPerformed(evt);
            }
        });

        forward.setText("Step Forward");
        forward.setEnabled(false);
        forward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardActionPerformed(evt);
            }
        });

        backward.setText("Step Back");
        backward.setEnabled(false);
        backward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backwardActionPerformed(evt);
            }
        });

        begin.setText("Beginning");
        begin.setEnabled(false);
        begin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beginActionPerformed(evt);
            }
        });

        jLabel31.setText("Step: ");

        stepView.setText("Need to open a file");

        jLabel32.setText("Stability:");

        stabilityView.setText("Need to open a file");

        dvTable.setEditable(false);
        dvTable.setColumns(20);
        dvTable.setRows(5);
        jScrollPane1.setViewportView(dvTable);

        jLabel33.setText("Time:");

        timeView.setText("Need to open a file");

        javax.swing.GroupLayout MasterLayout = new javax.swing.GroupLayout(Master);
        Master.setLayout(MasterLayout);
        MasterLayout.setHorizontalGroup(
            MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MasterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MasterLayout.createSequentialGroup()
                        .addGap(0, 103, Short.MAX_VALUE)
                        .addComponent(begin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backward)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(forward)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(end)
                        .addGap(72, 72, 72))
                    .addGroup(MasterLayout.createSequentialGroup()
                        .addGroup(MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MasterLayout.createSequentialGroup()
                                .addComponent(filelabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chosenfile))
                            .addGroup(MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MasterLayout.createSequentialGroup()
                                    .addComponent(jLabel31)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(stepView))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MasterLayout.createSequentialGroup()
                                    .addGroup(MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel32)
                                        .addComponent(jLabel33))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(timeView)
                                        .addComponent(stabilityView)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(MasterLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        MasterLayout.setVerticalGroup(
            MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MasterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filelabel)
                    .addComponent(chosenfile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(stepView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(stabilityView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(timeView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(end)
                    .addComponent(forward)
                    .addComponent(backward)
                    .addComponent(begin))
                .addGap(54, 54, 54))
        );

        MainTab.addTab("Master", Master);

        Link12.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Link13.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Link14.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Link15.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Link16.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Forward.setText("Step Forward");
        Forward.setEnabled(false);
        Forward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ForwardActionPerformed(evt);
            }
        });

        Back.setText("Step Back");
        Back.setEnabled(false);
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        jLabel6.setText("Node 5");

        jLabel7.setText("Node 2");

        jLabel8.setText("Node 3");

        jLabel9.setText("Node 4");

        jLabel10.setText("Node 6");

        stepView1.setText("Need to open a file");

        jLabel35.setText("Step: ");

        Recalculate.setText("Recalculate");
        Recalculate.setEnabled(false);
        Recalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecalculateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Node1Layout = new javax.swing.GroupLayout(Node1);
        Node1.setLayout(Node1Layout);
        Node1Layout.setHorizontalGroup(
            Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Node1Layout.createSequentialGroup()
                .addGroup(Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Node1Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Link12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel7)
                            .addGroup(Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(Node1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Recalculate))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Node1Layout.createSequentialGroup()
                                    .addGroup(Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9))
                                    .addGap(30, 30, 30)
                                    .addComponent(jLabel35)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(stepView1)))))
                    .addGroup(Node1Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Forward)))
                .addContainerGap(207, Short.MAX_VALUE))
        );
        Node1Layout.setVerticalGroup(
            Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Node1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel35)
                    .addComponent(stepView1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(Recalculate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(30, 30, 30)
                .addGroup(Node1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Forward)
                    .addComponent(Back))
                .addContainerGap(180, Short.MAX_VALUE))
        );

        MainTab.addTab("Node 1", Node1);

        Link21.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link21ActionPerformed(evt);
            }
        });

        Link23.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Link24.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Link25.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link25ActionPerformed(evt);
            }
        });

        Link26.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Forward1.setText("Step Forward");
        Forward1.setEnabled(false);
        Forward1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Forward1ActionPerformed(evt);
            }
        });

        Back1.setText("Step Back");
        Back1.setEnabled(false);
        Back1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Node 1");

        jLabel12.setText("Node 5");

        jLabel13.setText("Node 3");

        jLabel14.setText("Node 4");

        jLabel15.setText("Node 6");

        stepView2.setText("Need to open a file");

        jLabel37.setText("Step: ");

        Recalculate1.setText("Recalculate");
        Recalculate1.setEnabled(false);
        Recalculate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Recalculate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Node2Layout = new javax.swing.GroupLayout(Node2);
        Node2.setLayout(Node2Layout);
        Node2Layout.setHorizontalGroup(
            Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Node2Layout.createSequentialGroup()
                .addGroup(Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Node2Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Link21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(Node2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(32, 32, 32)
                                .addComponent(Recalculate1))
                            .addComponent(jLabel11)
                            .addGroup(Node2Layout.createSequentialGroup()
                                .addGroup(Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel37)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stepView2))))
                    .addGroup(Node2Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(Back1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Forward1)))
                .addContainerGap(213, Short.MAX_VALUE))
        );
        Node2Layout.setVerticalGroup(
            Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Node2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGroup(Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Node2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Link23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Link24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)))
                    .addGroup(Node2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37)
                            .addComponent(stepView2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(Recalculate1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(30, 30, 30)
                .addGroup(Node2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Forward1)
                    .addComponent(Back1))
                .addContainerGap(180, Short.MAX_VALUE))
        );

        MainTab.addTab("Node 2", Node2);

        Link31.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link31ActionPerformed(evt);
            }
        });

        Link32.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Link34.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link34ActionPerformed(evt);
            }
        });

        Link35.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link35ActionPerformed(evt);
            }
        });

        Link36.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Forward2.setText("Step Forward");
        Forward2.setEnabled(false);
        Forward2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Forward2ActionPerformed(evt);
            }
        });

        Back2.setText("Step Back");
        Back2.setEnabled(false);
        Back2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back2ActionPerformed(evt);
            }
        });

        jLabel16.setText("Node 1");

        jLabel17.setText("Node 2");

        jLabel18.setText("Node 5");

        jLabel19.setText("Node 4");

        jLabel20.setText("Node 6");

        stepView3.setText("Need to open a file");

        jLabel39.setText("Step: ");

        Recalculate2.setText("Recalculate");
        Recalculate2.setEnabled(false);
        Recalculate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Recalculate2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Node3Layout = new javax.swing.GroupLayout(Node3);
        Node3.setLayout(Node3Layout);
        Node3Layout.setHorizontalGroup(
            Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Node3Layout.createSequentialGroup()
                .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Node3Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Link31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16))
                        .addGap(32, 32, 32)
                        .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Node3Layout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stepView3))
                            .addComponent(Recalculate2)))
                    .addGroup(Node3Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(Back2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Forward2)))
                .addContainerGap(205, Short.MAX_VALUE))
        );
        Node3Layout.setVerticalGroup(
            Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Node3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Node3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Link32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)))
                    .addGroup(Node3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel39)
                            .addComponent(stepView3))))
                .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Node3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Link34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Link35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)))
                    .addGroup(Node3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(Recalculate2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(30, 30, 30)
                .addGroup(Node3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Forward2)
                    .addComponent(Back2))
                .addContainerGap(177, Short.MAX_VALUE))
        );

        MainTab.addTab("Node 3", Node3);

        Link41.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link41ActionPerformed(evt);
            }
        });

        Link42.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Link43.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link43ActionPerformed(evt);
            }
        });

        Link45.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link45ActionPerformed(evt);
            }
        });

        Link46.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Forward3.setText("Step Forward");
        Forward3.setEnabled(false);
        Forward3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Forward3ActionPerformed(evt);
            }
        });

        Back3.setText("Step Back");
        Back3.setEnabled(false);
        Back3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back3ActionPerformed(evt);
            }
        });

        jLabel21.setText("Node 1");

        jLabel22.setText("Node 2");

        jLabel23.setText("Node 3");

        jLabel24.setText("Node 5");

        jLabel25.setText("Node 6");

        stepView4.setText("Need to open a file");

        jLabel41.setText("Step: ");

        Recalculate3.setText("Recalculate");
        Recalculate3.setEnabled(false);
        Recalculate3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Recalculate3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Node4Layout = new javax.swing.GroupLayout(Node4);
        Node4.setLayout(Node4Layout);
        Node4Layout.setHorizontalGroup(
            Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Node4Layout.createSequentialGroup()
                .addGroup(Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Node4Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Link41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addGroup(Node4Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addGap(43, 43, 43)
                                .addComponent(Recalculate3))
                            .addGroup(Node4Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel41)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stepView4))
                            .addComponent(jLabel22)
                            .addComponent(jLabel21)))
                    .addGroup(Node4Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(Back3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Forward3)))
                .addContainerGap(213, Short.MAX_VALUE))
        );
        Node4Layout.setVerticalGroup(
            Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Node4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Node4Layout.createSequentialGroup()
                        .addGroup(Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Node4Layout.createSequentialGroup()
                                .addGroup(Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Link42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Link43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23)))
                            .addGroup(Node4Layout.createSequentialGroup()
                                .addGroup(Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel41)
                                    .addComponent(stepView4))
                                .addGap(22, 22, 22)))
                        .addGap(33, 33, 33)
                        .addGroup(Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Link45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Node4Layout.createSequentialGroup()
                        .addComponent(Recalculate3)
                        .addGap(22, 22, 22)))
                .addGroup(Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(30, 30, 30)
                .addGroup(Node4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Forward3)
                    .addComponent(Back3))
                .addContainerGap(182, Short.MAX_VALUE))
        );

        MainTab.addTab("Node 4", Node4);

        Link51.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link51ActionPerformed(evt);
            }
        });

        Link52.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Link53.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link53ActionPerformed(evt);
            }
        });

        Link54.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link54ActionPerformed(evt);
            }
        });

        Link56.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Forward4.setText("Step Forward");
        Forward4.setEnabled(false);
        Forward4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Forward4ActionPerformed(evt);
            }
        });

        Back4.setText("Step Back");
        Back4.setEnabled(false);
        Back4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back4ActionPerformed(evt);
            }
        });

        jLabel1.setText("Node 1");

        jLabel2.setText("Node 2");

        jLabel3.setText("Node 3");

        jLabel4.setText("Node 4");

        jLabel5.setText("Node 6");

        stepView5.setText("Need to open a file");

        jLabel43.setText("Step: ");

        Recalculate4.setText("Recalculate");
        Recalculate4.setEnabled(false);
        Recalculate4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Recalculate4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Node5Layout = new javax.swing.GroupLayout(Node5);
        Node5.setLayout(Node5Layout);
        Node5Layout.setHorizontalGroup(
            Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Node5Layout.createSequentialGroup()
                .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Node5Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Link51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link53, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link54, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addGroup(Node5Layout.createSequentialGroup()
                                .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(34, 34, 34)
                                .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Recalculate4)
                                    .addGroup(Node5Layout.createSequentialGroup()
                                        .addComponent(jLabel43)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(stepView5))))))
                    .addGroup(Node5Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(Back4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Forward4)))
                .addContainerGap(197, Short.MAX_VALUE))
        );
        Node5Layout.setVerticalGroup(
            Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Node5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Node5Layout.createSequentialGroup()
                        .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Link53, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Link54, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel43)
                        .addComponent(stepView5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Recalculate4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(40, 40, 40)
                .addGroup(Node5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Forward4)
                    .addComponent(Back4))
                .addContainerGap(164, Short.MAX_VALUE))
        );

        MainTab.addTab("Node 5", Node5);

        Link61.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link61ActionPerformed(evt);
            }
        });

        Link62.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Link63.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link63.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link63ActionPerformed(evt);
            }
        });

        Link64.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));
        Link64.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Link64ActionPerformed(evt);
            }
        });

        Link65.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "inf" }));

        Forward5.setText("Step Forward");
        Forward5.setEnabled(false);
        Forward5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Forward5ActionPerformed(evt);
            }
        });

        Back5.setText("Step Back");
        Back5.setEnabled(false);
        Back5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back5ActionPerformed(evt);
            }
        });

        jLabel26.setText("Node 1");

        jLabel27.setText("Node 2");

        jLabel28.setText("Node 3");

        jLabel29.setText("Node 4");

        jLabel30.setText("Node 5");

        stepView6.setText("Need to open a file");

        jLabel45.setText("Step: ");

        Recalculate5.setText("Recalculate");
        Recalculate5.setEnabled(false);
        Recalculate5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Recalculate5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Node6Layout = new javax.swing.GroupLayout(Node6);
        Node6.setLayout(Node6Layout);
        Node6Layout.setHorizontalGroup(
            Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Node6Layout.createSequentialGroup()
                .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Node6Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Link61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Link65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Node6Layout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel45)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stepView6))
                            .addComponent(jLabel27)
                            .addComponent(jLabel26)
                            .addGroup(Node6Layout.createSequentialGroup()
                                .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel29))
                                .addGap(50, 50, 50)
                                .addComponent(Recalculate5))))
                    .addGroup(Node6Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(Back5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Forward5)))
                .addContainerGap(213, Short.MAX_VALUE))
        );
        Node6Layout.setVerticalGroup(
            Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Node6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Link61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Node6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Node6Layout.createSequentialGroup()
                                .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Link62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel27))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Link63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel28)))
                            .addGroup(Node6Layout.createSequentialGroup()
                                .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel45)
                                    .addComponent(stepView6))
                                .addGap(22, 22, 22)))
                        .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Link64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Link65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30))
                        .addGap(57, 57, 57)
                        .addGroup(Node6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Forward5)
                            .addComponent(Back5)))
                    .addGroup(Node6Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(Recalculate5)))
                .addContainerGap(188, Short.MAX_VALUE))
        );

        MainTab.addTab("Node 6", Node6);

        FileChooserTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileChooserTabActionPerformed(evt);
            }
        });
        MainTab.addTab("FileChooser", FileChooserTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MainTab)
                .addGap(61, 61, 61))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MainTab))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FileChooserTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileChooserTabActionPerformed
        // TODO add your handling code here:
        chosenfile.setText(FileChooserTab.getSelectedFile().getName());
        
        steps = new ArrayList<Step>();
        Step first = new Step();
        int origin, destination, cost;
        try{
        Scanner scan = new Scanner(FileChooserTab.getSelectedFile());
            while(scan.hasNext()){
                origin = scan.nextInt();
                destination = scan.nextInt();
                cost = scan.nextInt();
                first.setNode(origin, destination, cost); //set the node
                first.setNode(destination, origin, cost); //that crap ain't directed
                System.out.println(origin + " " + destination + " " + cost);
            }
        
            steps.add(first);
        }
        catch(Exception e){}
        
        //update all of the dropdowns in the tabs
        updateDropdowns(steps.get(0));
        currentStep = 0;
        
        long startTime = System.currentTimeMillis();
        
        //run the algorithm
        steps.add(nextUpdate(steps.get(currentStep)));
        while(!steps.get(steps.size() - 1).equals(steps.get(steps.size() - 2))){
            steps.add(nextUpdate(steps.get(steps.size() -1)));
        }           
        steps.remove(steps.size() - 1);
        System.out.println(steps.size());
        
        long endTime = System.currentTimeMillis();
        
        timeView.setText(Long.toString(endTime - startTime) + " ms");
        
        //update the stability steps
        stabilityView.setText(Integer.toString(steps.size()) + " steps");
        
        //enable all of the buttons
        if(steps.size() != 1){
            forward.setEnabled(true);
            Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
            end.setEnabled(true);
        }
        
        //set all of the recalculates to enabled
        Recalculate.setEnabled(true);
        Recalculate1.setEnabled(true);
        Recalculate2.setEnabled(true);
        Recalculate3.setEnabled(true);
        Recalculate4.setEnabled(true);
        Recalculate5.setEnabled(true);
        
                
    }//GEN-LAST:event_FileChooserTabActionPerformed

    //where the algorithm is happening
    public Step nextUpdate(Step step){
        Step current = new Step();
        int cost = 1000; //arbitrary large number
        
        for(int i = 0; i < 6; i++){//going through each node
            for(int j = 0; j < 6; j++){//going through each link
                cost = 1000;
                for(int k = 0; k < 6; k++){//iterate through
                    //pick the cheapest using Bellman
                    if(step.getNode(i).getCost(k) + step.getNode(k).getCost(j) < cost){
                        cost = step.getNode(i).getCost(k) + step.getNode(k).getCost(j);
                    }
                }
                //assign the cost
            if(cost > 16){
                cost = 16;
            }
            current.setNode(i + 1, j + 1, cost);
            }  
        }
        
        return current;
    }
    
    //update Dropdowns will update all of the dropdowns
    //it will also update the main table
    public void updateDropdowns(Step step){
        //update panel 1
        Link12.setSelectedIndex(step.getNode(0).getCost(1) - 1);
        Link13.setSelectedIndex(step.getNode(0).getCost(2) - 1);
        Link14.setSelectedIndex(step.getNode(0).getCost(3) - 1);
        Link15.setSelectedIndex(step.getNode(0).getCost(4) - 1);
        Link16.setSelectedIndex(step.getNode(0).getCost(5) - 1);
        
        //update panel 2
        Link21.setSelectedIndex(step.getNode(1).getCost(0) - 1);
        Link23.setSelectedIndex(step.getNode(1).getCost(2) - 1);
        Link24.setSelectedIndex(step.getNode(1).getCost(3) - 1);
        Link25.setSelectedIndex(step.getNode(1).getCost(4) - 1);
        Link26.setSelectedIndex(step.getNode(1).getCost(5) - 1);
        
        //update panel 3
        Link31.setSelectedIndex(step.getNode(2).getCost(0) - 1);
        Link32.setSelectedIndex(step.getNode(2).getCost(1) - 1);
        Link34.setSelectedIndex(step.getNode(2).getCost(3) - 1);
        Link35.setSelectedIndex(step.getNode(2).getCost(4) - 1);
        Link36.setSelectedIndex(step.getNode(2).getCost(5) - 1);
        
        //update panel 4
        Link41.setSelectedIndex(step.getNode(3).getCost(0) - 1);
        Link42.setSelectedIndex(step.getNode(3).getCost(1) - 1);
        Link43.setSelectedIndex(step.getNode(3).getCost(2) - 1);
        Link45.setSelectedIndex(step.getNode(3).getCost(4) - 1);
        Link46.setSelectedIndex(step.getNode(3).getCost(5) - 1);
        
        //update panel 5
        Link51.setSelectedIndex(step.getNode(4).getCost(0) - 1);
        Link52.setSelectedIndex(step.getNode(4).getCost(1) - 1);
        Link53.setSelectedIndex(step.getNode(4).getCost(2) - 1);
        Link54.setSelectedIndex(step.getNode(4).getCost(3) - 1);
        Link56.setSelectedIndex(step.getNode(4).getCost(5) - 1);
        
        //update panel 6
        Link61.setSelectedIndex(step.getNode(5).getCost(0) - 1);
        Link62.setSelectedIndex(step.getNode(5).getCost(1) - 1);
        Link63.setSelectedIndex(step.getNode(5).getCost(2) - 1);
        Link64.setSelectedIndex(step.getNode(5).getCost(3) - 1);
        Link65.setSelectedIndex(step.getNode(5).getCost(4) - 1);
        
        //update the main panel
        //header
        String table = "  \t01\t02\t03\t04\t05\t06\n"
                + " ----------------------------------------"
                + "-----------------------------------------\n";
        //actual meat of the table
        for(int i = 0; i < 6; i ++){
            table += Integer.toString(i+1) + " |";
            for(int j = 0; j < 6; j ++){
                if(steps.get(currentStep).getNode(i).getCost(j)!=16){
                    table += "\t" + steps.get(currentStep).getNode(i).getCost(j);
                }
                else{
                    table += "\tinf";
                }
            }
            table += "\n";
        }
        
        //set the table
        dvTable.setText(table);
        
        //set the current step
        stepView.setText(Integer.toString(currentStep+1));
        stepView1.setText(Integer.toString(currentStep+1));
        stepView2.setText(Integer.toString(currentStep+1));
        stepView3.setText(Integer.toString(currentStep+1));
        stepView4.setText(Integer.toString(currentStep+1));
        stepView5.setText(Integer.toString(currentStep+1));
        stepView6.setText(Integer.toString(currentStep+1));
        
    }
    
    private void ForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ForwardActionPerformed
        // TODO add your handling code here:
        currentStep ++;
        updateDropdowns(steps.get(currentStep));
        backward.setEnabled(true);
        Back.setEnabled(true);
        Back1.setEnabled(true);
        Back2.setEnabled(true);
        Back3.setEnabled(true);
        Back4.setEnabled(true);
        Back5.setEnabled(true);
        
        //is this at the end of the list, then disable you're ability to move right
        if(currentStep == steps.size() - 1){
            forward.setEnabled(false);
            end.setEnabled(false);
            Forward.setEnabled(false);
            Forward1.setEnabled(false);
            Forward2.setEnabled(false);
            Forward3.setEnabled(false);
            Forward4.setEnabled(false);
            Forward5.setEnabled(false);
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != 0){
            backward.setEnabled(true);
            begin.setEnabled(true);
        }
        
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_ForwardActionPerformed

    private void Forward1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Forward1ActionPerformed
        // TODO add your handling code here:
        currentStep ++;
        updateDropdowns(steps.get(currentStep));
        backward.setEnabled(true);
        Back.setEnabled(true);
        Back1.setEnabled(true);
        Back2.setEnabled(true);
        Back3.setEnabled(true);
        Back4.setEnabled(true);
        Back5.setEnabled(true);
        
        //is this at the end of the list, then disable you're ability to move right
        if(currentStep == steps.size() - 1){
            forward.setEnabled(false);
            end.setEnabled(false);
            Forward.setEnabled(false);
            Forward1.setEnabled(false);
            Forward2.setEnabled(false);
            Forward3.setEnabled(false);
            Forward4.setEnabled(false);
            Forward5.setEnabled(false);
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != 0){
            backward.setEnabled(true);
            begin.setEnabled(true);
        }
        
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_Forward1ActionPerformed

    private void Back1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back1ActionPerformed
        // TODO add your handling code here:
         currentStep --;
        updateDropdowns(steps.get(currentStep));
        forward.setEnabled(true);
        Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
        
        //if you are the bottom disable the ability to go back
        if(currentStep == 0){
            backward.setEnabled(false);
            begin.setEnabled(false);
            Back.setEnabled(false);
            Back1.setEnabled(false);
            Back2.setEnabled(false);
            Back3.setEnabled(false);
            Back4.setEnabled(false);
            Back5.setEnabled(false);       
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != steps.size() - 1){
            forward.setEnabled(true);
            end.setEnabled(true);
        }
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_Back1ActionPerformed

    private void Link21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link21ActionPerformed

    private void Link25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link25ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link25ActionPerformed

    private void Link31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link31ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link31ActionPerformed

    private void Link35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link35ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link35ActionPerformed

    private void Forward2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Forward2ActionPerformed
        // TODO add your handling code here:
currentStep ++;
        updateDropdowns(steps.get(currentStep));
        backward.setEnabled(true);
        Back.setEnabled(true);
        Back1.setEnabled(true);
        Back2.setEnabled(true);
        Back3.setEnabled(true);
        Back4.setEnabled(true);
        Back5.setEnabled(true);
        
        //is this at the end of the list, then disable you're ability to move right
        if(currentStep == steps.size() - 1){
            forward.setEnabled(false);
            end.setEnabled(false);
            Forward.setEnabled(false);
            Forward1.setEnabled(false);
            Forward2.setEnabled(false);
            Forward3.setEnabled(false);
            Forward4.setEnabled(false);
            Forward5.setEnabled(false);
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != 0){
            backward.setEnabled(true);
            begin.setEnabled(true);
        }
        
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_Forward2ActionPerformed

    private void Back2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back2ActionPerformed
        // TODO add your handling code here:
         currentStep --;
        updateDropdowns(steps.get(currentStep));
        forward.setEnabled(true);
        Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
        
        //if you are the bottom disable the ability to go back
        if(currentStep == 0){
            backward.setEnabled(false);
            begin.setEnabled(false);
            Back.setEnabled(false);
            Back1.setEnabled(false);
            Back2.setEnabled(false);
            Back3.setEnabled(false);
            Back4.setEnabled(false);
            Back5.setEnabled(false);       
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != steps.size() - 1){
            forward.setEnabled(true);
            end.setEnabled(true);
        }
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_Back2ActionPerformed

    private void Link34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link34ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link34ActionPerformed

    private void Link41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link41ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link41ActionPerformed

    private void Link43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link43ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link43ActionPerformed

    private void Link45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link45ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link45ActionPerformed

    private void Forward3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Forward3ActionPerformed
        // TODO add your handling code here:
        currentStep ++;
        updateDropdowns(steps.get(currentStep));
        backward.setEnabled(true);
        Back.setEnabled(true);
        Back1.setEnabled(true);
        Back2.setEnabled(true);
        Back3.setEnabled(true);
        Back4.setEnabled(true);
        Back5.setEnabled(true);
        
        //is this at the end of the list, then disable you're ability to move right
        if(currentStep == steps.size() - 1){
            forward.setEnabled(false);
            end.setEnabled(false);
            Forward.setEnabled(false);
            Forward1.setEnabled(false);
            Forward2.setEnabled(false);
            Forward3.setEnabled(false);
            Forward4.setEnabled(false);
            Forward5.setEnabled(false);
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != 0){
            backward.setEnabled(true);
            begin.setEnabled(true);
        }
        
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_Forward3ActionPerformed

    private void Back3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back3ActionPerformed
        // TODO add your handling code here:
         currentStep --;
        updateDropdowns(steps.get(currentStep));
        forward.setEnabled(true);
        Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
        
        //if you are the bottom disable the ability to go back
        if(currentStep == 0){
            backward.setEnabled(false);
            begin.setEnabled(false);
            Back.setEnabled(false);
            Back1.setEnabled(false);
            Back2.setEnabled(false);
            Back3.setEnabled(false);
            Back4.setEnabled(false);
            Back5.setEnabled(false);       
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != steps.size() - 1){
            forward.setEnabled(true);
            end.setEnabled(true);
        }
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_Back3ActionPerformed

    private void Link51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link51ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link51ActionPerformed

    private void Link53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link53ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link53ActionPerformed

    private void Link54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link54ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link54ActionPerformed

    private void Forward4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Forward4ActionPerformed
        // TODO add your handling code here:
        currentStep ++;
        updateDropdowns(steps.get(currentStep));
        backward.setEnabled(true);
        Back.setEnabled(true);
        Back1.setEnabled(true);
        Back2.setEnabled(true);
        Back3.setEnabled(true);
        Back4.setEnabled(true);
        Back5.setEnabled(true);
        
        //is this at the end of the list, then disable you're ability to move right
        if(currentStep == steps.size() - 1){
            forward.setEnabled(false);
            end.setEnabled(false);
            Forward.setEnabled(false);
            Forward1.setEnabled(false);
            Forward2.setEnabled(false);
            Forward3.setEnabled(false);
            Forward4.setEnabled(false);
            Forward5.setEnabled(false);
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != 0){
            backward.setEnabled(true);
            begin.setEnabled(true);
        }
        
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_Forward4ActionPerformed

    private void Back4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back4ActionPerformed
        // TODO add your handling code here:
         currentStep --;
        updateDropdowns(steps.get(currentStep));
        forward.setEnabled(true);
        Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
        
        //if you are the bottom disable the ability to go back
        if(currentStep == 0){
            backward.setEnabled(false);
            begin.setEnabled(false);
            Back.setEnabled(false);
            Back1.setEnabled(false);
            Back2.setEnabled(false);
            Back3.setEnabled(false);
            Back4.setEnabled(false);
            Back5.setEnabled(false);       
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != steps.size() - 1){
            forward.setEnabled(true);
            end.setEnabled(true);
        }
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_Back4ActionPerformed

    private void Link61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link61ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link61ActionPerformed

    private void Link63ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link63ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link63ActionPerformed

    private void Link64ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Link64ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Link64ActionPerformed

    private void Forward5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Forward5ActionPerformed
        // TODO add your handling code here:
        currentStep ++;
        updateDropdowns(steps.get(currentStep));
        backward.setEnabled(true);
        Back.setEnabled(true);
        Back1.setEnabled(true);
        Back2.setEnabled(true);
        Back3.setEnabled(true);
        Back4.setEnabled(true);
        Back5.setEnabled(true);
        
        //is this at the end of the list, then disable you're ability to move right
        if(currentStep == steps.size() - 1){
            forward.setEnabled(false);
            end.setEnabled(false);
            Forward.setEnabled(false);
            Forward1.setEnabled(false);
            Forward2.setEnabled(false);
            Forward3.setEnabled(false);
            Forward4.setEnabled(false);
            Forward5.setEnabled(false);
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != 0){
            backward.setEnabled(true);
            begin.setEnabled(true);
        }
        
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_Forward5ActionPerformed

    private void Back5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back5ActionPerformed
        // TODO add your handling code here:
         currentStep --;
        updateDropdowns(steps.get(currentStep));
        forward.setEnabled(true);
        Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
        
        //if you are the bottom disable the ability to go back
        if(currentStep == 0){
            backward.setEnabled(false);
            begin.setEnabled(false);
            Back.setEnabled(false);
            Back1.setEnabled(false);
            Back2.setEnabled(false);
            Back3.setEnabled(false);
            Back4.setEnabled(false);
            Back5.setEnabled(false);       
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != steps.size() - 1){
            forward.setEnabled(true);
            end.setEnabled(true);
        }
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_Back5ActionPerformed

    private void beginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beginActionPerformed
        // TODO add your handling code here:
        currentStep = 0;
        updateDropdowns(steps.get(currentStep));
        backward.setEnabled(false);
        Back.setEnabled(false);
        Back1.setEnabled(false);
        Back2.setEnabled(false);
        Back3.setEnabled(false);
        Back4.setEnabled(false);
        Back5.setEnabled(false);
        
        //you are at the front, you can't go back
        backward.setEnabled(false);
        begin.setEnabled(false);
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != steps.size() - 1){
            forward.setEnabled(true);
            Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
            end.setEnabled(true);
        }
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_beginActionPerformed

    private void backwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backwardActionPerformed
        // TODO add your handling code here:
        currentStep --;
        updateDropdowns(steps.get(currentStep));
        forward.setEnabled(true);
        Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
        
        //if you are the bottom disable the ability to go back
        if(currentStep == 0){
            backward.setEnabled(false);
            begin.setEnabled(false);
            Back.setEnabled(false);
            Back1.setEnabled(false);
            Back2.setEnabled(false);
            Back3.setEnabled(false);
            Back4.setEnabled(false);
            Back5.setEnabled(false);       
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != steps.size() - 1){
            forward.setEnabled(true);
            end.setEnabled(true);
        }
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_backwardActionPerformed

    private void forwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardActionPerformed
        // TODO add your handling code here:
        currentStep ++;
        updateDropdowns(steps.get(currentStep));
        backward.setEnabled(true);
        Back.setEnabled(true);
        Back1.setEnabled(true);
        Back2.setEnabled(true);
        Back3.setEnabled(true);
        Back4.setEnabled(true);
        Back5.setEnabled(true);
        
        //is this at the end of the list, then disable you're ability to move right
        if(currentStep == steps.size() - 1){
            forward.setEnabled(false);
            end.setEnabled(false);
            Forward.setEnabled(false);
            Forward1.setEnabled(false);
            Forward2.setEnabled(false);
            Forward3.setEnabled(false);
            Forward4.setEnabled(false);
            Forward5.setEnabled(false);
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != 0){
            backward.setEnabled(true);
            begin.setEnabled(true);
        }
        
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_forwardActionPerformed

    private void endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endActionPerformed
        // TODO add your handling code here:
        currentStep = steps.size() - 1;
        updateDropdowns(steps.get(currentStep));
        forward.setEnabled(false);
        Forward.setEnabled(false);
        Forward1.setEnabled(false);
        Forward2.setEnabled(false);
        Forward3.setEnabled(false);
        Forward4.setEnabled(false);
        Forward5.setEnabled(false);
        
        //you are at the back, you can't go forwards
        forward.setEnabled(false);
        end.setEnabled(false);
        
        //is this not at the beginning then set the beginning to true
        backward.setEnabled(true);
        begin.setEnabled(true);
        
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_endActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
         currentStep --;
        updateDropdowns(steps.get(currentStep));
        forward.setEnabled(true);
        Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
        
        //if you are the bottom disable the ability to go back
        if(currentStep == 0){
            backward.setEnabled(false);
            begin.setEnabled(false);
            Back.setEnabled(false);
            Back1.setEnabled(false);
            Back2.setEnabled(false);
            Back3.setEnabled(false);
            Back4.setEnabled(false);
            Back5.setEnabled(false);       
        }
        
        //is this not at the beginning then set the beginning to true
        if(currentStep != steps.size() - 1){
            forward.setEnabled(true);
            end.setEnabled(true);
        }
        stepView.setText(Integer.toString(currentStep+1));
    }//GEN-LAST:event_BackActionPerformed

    private void RecalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecalculateActionPerformed
        // TODO add your handling code here:
        //this will parse all of the info from the dropdowns on the page and
        //then it will recalculate
        
        //figure out how many to remove
        int rem = steps.size() - 1 - currentStep;
        for(int i = 0; i < rem; i ++){
            steps.remove(steps.size() - 1);
        }
        
        //set all the new node values
        steps.get(currentStep).setNode(1,2,Link12.getSelectedIndex()+1);
        steps.get(currentStep).setNode(2,1,Link12.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(1,3,Link13.getSelectedIndex()+1);
        steps.get(currentStep).setNode(3,1,Link13.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(1,4,Link14.getSelectedIndex()+1);
        steps.get(currentStep).setNode(4,1,Link14.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(1,5,Link15.getSelectedIndex()+1);
        steps.get(currentStep).setNode(5,1,Link15.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(1,6,Link16.getSelectedIndex()+1);
        steps.get(currentStep).setNode(6,1,Link16.getSelectedIndex()+1);

        //the beginning of the timing
        long startTime = System.currentTimeMillis();
        
        //run the algorithm
        steps.add(nextUpdate(steps.get(currentStep)));
        while(!steps.get(steps.size() - 1).equals(steps.get(steps.size() - 2))){
            steps.add(nextUpdate(steps.get(steps.size() -1)));
        }           
        steps.remove(steps.size() - 1);
        System.out.println(steps.size());
        
        //the end of the timing
        long endTime = System.currentTimeMillis();
        
        timeView.setText(Long.toString(endTime - startTime) + " ms");
        
        //update the stability steps
        stabilityView.setText(Integer.toString(steps.size()) + " steps");
        
        //enable all of the buttons
        if(steps.size() != currentStep + 1){
            forward.setEnabled(true);
            Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
            end.setEnabled(true);
        }
        
        updateDropdowns(steps.get(currentStep));
    }//GEN-LAST:event_RecalculateActionPerformed

    private void Recalculate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Recalculate1ActionPerformed
        //this will parse all of the info from the dropdowns on the page and
        //then it will recalculate
        
        //figure out how many to remove
        int rem = steps.size() - 1 - currentStep;
        for(int i = 0; i < rem; i ++){
            steps.remove(steps.size() - 1);
        }
        
        //set all the new node values
        steps.get(currentStep).setNode(2,1,Link21.getSelectedIndex()+1);
        steps.get(currentStep).setNode(1,2,Link21.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(2,3,Link23.getSelectedIndex()+1);
        steps.get(currentStep).setNode(3,2,Link23.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(2,4,Link24.getSelectedIndex()+1);
        steps.get(currentStep).setNode(4,2,Link24.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(2,5,Link25.getSelectedIndex()+1);
        steps.get(currentStep).setNode(5,2,Link25.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(2,6,Link26.getSelectedIndex()+1);
        steps.get(currentStep).setNode(6,2,Link26.getSelectedIndex()+1);

        //the beginning of the timing
        long startTime = System.currentTimeMillis();
        
        //run the algorithm
        steps.add(nextUpdate(steps.get(currentStep)));
        while(!steps.get(steps.size() - 1).equals(steps.get(steps.size() - 2))){
            steps.add(nextUpdate(steps.get(steps.size() -1)));
        }           
        steps.remove(steps.size() - 1);
        System.out.println(steps.size());
        
        //the end of the timing
        long endTime = System.currentTimeMillis();
        
        timeView.setText(Long.toString(endTime - startTime) + " ms");
        
        //update the stability steps
        stabilityView.setText(Integer.toString(steps.size()) + " steps");
        
        //enable all of the buttons
        if(steps.size() != currentStep + 1){
            forward.setEnabled(true);
            Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
            end.setEnabled(true);
        }
        
        updateDropdowns(steps.get(currentStep));
    }//GEN-LAST:event_Recalculate1ActionPerformed

    private void Recalculate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Recalculate2ActionPerformed
        //this will parse all of the info from the dropdowns on the page and
        //then it will recalculate
        
        //figure out how many to remove
        int rem = steps.size() - 1 - currentStep;
        for(int i = 0; i < rem; i ++){
            steps.remove(steps.size() - 1);
        }
        
        //set all the new node values
        steps.get(currentStep).setNode(3,2,Link32.getSelectedIndex()+1);
        steps.get(currentStep).setNode(2,3,Link32.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(3,1,Link31.getSelectedIndex()+1);
        steps.get(currentStep).setNode(1,3,Link31.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(3,4,Link34.getSelectedIndex()+1);
        steps.get(currentStep).setNode(4,3,Link34.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(3,5,Link35.getSelectedIndex()+1);
        steps.get(currentStep).setNode(5,3,Link35.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(3,6,Link36.getSelectedIndex()+1);
        steps.get(currentStep).setNode(6,3,Link36.getSelectedIndex()+1);

        //the beginning of the timing
        long startTime = System.currentTimeMillis();
        
        //run the algorithm
        steps.add(nextUpdate(steps.get(currentStep)));
        while(!steps.get(steps.size() - 1).equals(steps.get(steps.size() - 2))){
            steps.add(nextUpdate(steps.get(steps.size() -1)));
        }           
        steps.remove(steps.size() - 1);
        System.out.println(steps.size());
        
        //the end of the timing
        long endTime = System.currentTimeMillis();
        
        timeView.setText(Long.toString(endTime - startTime) + " ms");
        
        //update the stability steps
        stabilityView.setText(Integer.toString(steps.size()) + " steps");
        
        //enable all of the buttons
        if(steps.size() != currentStep + 1){
            forward.setEnabled(true);
            Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
            end.setEnabled(true);
        }
        
        updateDropdowns(steps.get(currentStep));
    }//GEN-LAST:event_Recalculate2ActionPerformed

    private void Recalculate3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Recalculate3ActionPerformed
        //this will parse all of the info from the dropdowns on the page and
        //then it will recalculate
        
        //figure out how many to remove
        int rem = steps.size() - 1 - currentStep;
        for(int i = 0; i < rem; i ++){
            steps.remove(steps.size() - 1);
        }
        
        //set all the new node values
        steps.get(currentStep).setNode(4,2,Link42.getSelectedIndex()+1);
        steps.get(currentStep).setNode(2,4,Link42.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(4,3,Link43.getSelectedIndex()+1);
        steps.get(currentStep).setNode(3,4,Link43.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(4,1,Link41.getSelectedIndex()+1);
        steps.get(currentStep).setNode(1,4,Link41.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(4,5,Link45.getSelectedIndex()+1);
        steps.get(currentStep).setNode(5,4,Link45.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(4,6,Link46.getSelectedIndex()+1);
        steps.get(currentStep).setNode(6,4,Link46.getSelectedIndex()+1);

        //the beginning of the timing
        long startTime = System.currentTimeMillis();
        
        //run the algorithm
        steps.add(nextUpdate(steps.get(currentStep)));
        while(!steps.get(steps.size() - 1).equals(steps.get(steps.size() - 2))){
            steps.add(nextUpdate(steps.get(steps.size() -1)));
        }           
        steps.remove(steps.size() - 1);
        System.out.println(steps.size());
        
        //the end of the timing
        long endTime = System.currentTimeMillis();
        
        timeView.setText(Long.toString(endTime - startTime) + " ms");
        
        //update the stability steps
        stabilityView.setText(Integer.toString(steps.size()) + " steps");
        
        //enable all of the buttons
        if(steps.size() != currentStep + 1){
            forward.setEnabled(true);
            Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
            end.setEnabled(true);
        }
        
        updateDropdowns(steps.get(currentStep));
    }//GEN-LAST:event_Recalculate3ActionPerformed

    private void Recalculate4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Recalculate4ActionPerformed
        //this will parse all of the info from the dropdowns on the page and
        //then it will recalculate
        
        //figure out how many to remove
        int rem = steps.size() - 1 - currentStep;
        for(int i = 0; i < rem; i ++){
            steps.remove(steps.size() - 1);
        }
        
        //set all the new node values
        steps.get(currentStep).setNode(5,2,Link52.getSelectedIndex()+1);
        steps.get(currentStep).setNode(2,5,Link52.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(5,3,Link53.getSelectedIndex()+1);
        steps.get(currentStep).setNode(3,5,Link53.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(5,4,Link54.getSelectedIndex()+1);
        steps.get(currentStep).setNode(4,5,Link54.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(5,1,Link51.getSelectedIndex()+1);
        steps.get(currentStep).setNode(1,5,Link51.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(5,6,Link56.getSelectedIndex()+1);
        steps.get(currentStep).setNode(6,5,Link56.getSelectedIndex()+1);

        //the beginning of the timing
        long startTime = System.currentTimeMillis();
        
        //run the algorithm
        steps.add(nextUpdate(steps.get(currentStep)));
        while(!steps.get(steps.size() - 1).equals(steps.get(steps.size() - 2))){
            steps.add(nextUpdate(steps.get(steps.size() -1)));
        }           
        steps.remove(steps.size() - 1);
        System.out.println(steps.size());
        
        //the end of the timing
        long endTime = System.currentTimeMillis();
        
        timeView.setText(Long.toString(endTime - startTime) + " ms");
        
        //update the stability steps
        stabilityView.setText(Integer.toString(steps.size()) + " steps");
        
        //enable all of the buttons
        if(steps.size() != currentStep + 1){
            forward.setEnabled(true);
            Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
            end.setEnabled(true);
        }
        
        updateDropdowns(steps.get(currentStep));
    }//GEN-LAST:event_Recalculate4ActionPerformed

    private void Recalculate5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Recalculate5ActionPerformed
        //this will parse all of the info from the dropdowns on the page and
        //then it will recalculate
        
        //figure out how many to remove
        int rem = steps.size() - 1 - currentStep;
        for(int i = 0; i < rem; i ++){
            steps.remove(steps.size() - 1);
        }
        
        //set all the new node values
        steps.get(currentStep).setNode(6,2,Link62.getSelectedIndex()+1);
        steps.get(currentStep).setNode(2,6,Link62.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(6,3,Link63.getSelectedIndex()+1);
        steps.get(currentStep).setNode(3,6,Link63.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(6,4,Link64.getSelectedIndex()+1);
        steps.get(currentStep).setNode(4,6,Link64.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(6,5,Link65.getSelectedIndex()+1);
        steps.get(currentStep).setNode(5,6,Link65.getSelectedIndex()+1);
        
        steps.get(currentStep).setNode(6,1,Link61.getSelectedIndex()+1);
        steps.get(currentStep).setNode(1,6,Link61.getSelectedIndex()+1);

        //the beginning of the timing
        long startTime = System.currentTimeMillis();
        
        //run the algorithm
        steps.add(nextUpdate(steps.get(currentStep)));
        while(!steps.get(steps.size() - 1).equals(steps.get(steps.size() - 2))){
            steps.add(nextUpdate(steps.get(steps.size() -1)));
        }           
        steps.remove(steps.size() - 1);
        System.out.println(steps.size());
        
        //the end of the timing
        long endTime = System.currentTimeMillis();
        
        timeView.setText(Long.toString(endTime - startTime) + " ms");
        
        //update the stability steps
        stabilityView.setText(Integer.toString(steps.size()) + " steps");
        
        //enable all of the buttons
        if(steps.size() != currentStep + 1){
            forward.setEnabled(true);
            Forward.setEnabled(true);
        Forward1.setEnabled(true);
        Forward2.setEnabled(true);
        Forward3.setEnabled(true);
        Forward4.setEnabled(true);
        Forward5.setEnabled(true);
            end.setEnabled(true);
        }
        
        updateDropdowns(steps.get(currentStep));
    }//GEN-LAST:event_Recalculate5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Routers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Routers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Routers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Routers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Routers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Back1;
    private javax.swing.JButton Back2;
    private javax.swing.JButton Back3;
    private javax.swing.JButton Back4;
    private javax.swing.JButton Back5;
    private javax.swing.JFileChooser FileChooserTab;
    private javax.swing.JButton Forward;
    private javax.swing.JButton Forward1;
    private javax.swing.JButton Forward2;
    private javax.swing.JButton Forward3;
    private javax.swing.JButton Forward4;
    private javax.swing.JButton Forward5;
    private javax.swing.JComboBox Link12;
    private javax.swing.JComboBox Link13;
    private javax.swing.JComboBox Link14;
    private javax.swing.JComboBox Link15;
    private javax.swing.JComboBox Link16;
    private javax.swing.JComboBox Link21;
    private javax.swing.JComboBox Link23;
    private javax.swing.JComboBox Link24;
    private javax.swing.JComboBox Link25;
    private javax.swing.JComboBox Link26;
    private javax.swing.JComboBox Link31;
    private javax.swing.JComboBox Link32;
    private javax.swing.JComboBox Link34;
    private javax.swing.JComboBox Link35;
    private javax.swing.JComboBox Link36;
    private javax.swing.JComboBox Link41;
    private javax.swing.JComboBox Link42;
    private javax.swing.JComboBox Link43;
    private javax.swing.JComboBox Link45;
    private javax.swing.JComboBox Link46;
    private javax.swing.JComboBox Link51;
    private javax.swing.JComboBox Link52;
    private javax.swing.JComboBox Link53;
    private javax.swing.JComboBox Link54;
    private javax.swing.JComboBox Link56;
    private javax.swing.JComboBox Link61;
    private javax.swing.JComboBox Link62;
    private javax.swing.JComboBox Link63;
    private javax.swing.JComboBox Link64;
    private javax.swing.JComboBox Link65;
    private javax.swing.JTabbedPane MainTab;
    private javax.swing.JPanel Master;
    private javax.swing.JPanel Node1;
    private javax.swing.JPanel Node2;
    private javax.swing.JPanel Node3;
    private javax.swing.JPanel Node4;
    private javax.swing.JPanel Node5;
    private javax.swing.JPanel Node6;
    private javax.swing.JButton Recalculate;
    private javax.swing.JButton Recalculate1;
    private javax.swing.JButton Recalculate2;
    private javax.swing.JButton Recalculate3;
    private javax.swing.JButton Recalculate4;
    private javax.swing.JButton Recalculate5;
    private javax.swing.JButton backward;
    private javax.swing.JButton begin;
    private javax.swing.JLabel chosenfile;
    private javax.swing.JTextArea dvTable;
    private javax.swing.JButton end;
    private javax.swing.JLabel filelabel;
    private javax.swing.JButton forward;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel stabilityView;
    private javax.swing.JLabel stepView;
    private javax.swing.JLabel stepView1;
    private javax.swing.JLabel stepView2;
    private javax.swing.JLabel stepView3;
    private javax.swing.JLabel stepView4;
    private javax.swing.JLabel stepView5;
    private javax.swing.JLabel stepView6;
    private javax.swing.JLabel timeView;
    // End of variables declaration//GEN-END:variables
}
